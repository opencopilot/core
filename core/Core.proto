syntax = "proto3";
package opencopilot;

service Core {
    rpc ListInstances(ListInstancesRequest) returns (stream Instance) {}
    rpc CreateInstance(CreateInstanceRequest) returns (Instance) {}
    rpc DestroyInstance(DestroyInstanceRequest) returns (DestroyInstanceResponse) {}
    rpc GetInstance(GetInstanceRequest) returns (Instance) {}
    
    rpc AddService(AddServiceRequest) returns (Instance) {}
    rpc RemoveService(RemoveServiceRequest) returns (Instance) {}
}

enum Provider {
    PACKET = 0;
}

message Auth {
    Provider provider = 1;
    string payload = 2;
}

message ListInstancesRequest {
    Auth auth = 1;
}

message CreateInstanceRequest {
    Auth auth = 1;
}

message DestroyInstanceRequest {
    Auth auth = 1;
    string instance_id = 2;
}

message DestroyInstanceResponse {
    
}

message GetInstanceRequest {
    Auth auth = 1;
    string instance_id = 2;
}

message AddServiceRequest {
    Auth auth = 1;
    string instance_id = 2;
    string service = 3;
    string config = 4;
}

message RemoveServiceRequest {
    Auth auth = 1;
    string instance_id = 2;
    string service = 3;
}

message Instance {
    string id = 1;
    Provider provider = 2;
    string owner = 3;
    string device = 4;
    repeated Service services = 5;
}

// message Device {
//     string id = 1;
//     string status = 2;
// }

message Service {
    string type = 1;
    string config = 2;
}